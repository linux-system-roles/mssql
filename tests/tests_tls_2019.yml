# SPDX-License-Identifier: MIT
---
- name: Ensure that tls encryption configuration works
  hosts: all
  vars:
    mssql_accept_microsoft_odbc_driver_17_for_sql_server_eula: true
    mssql_accept_microsoft_cli_utilities_for_sql_server_eula: true
    mssql_accept_microsoft_sql_server_standard_eula: true
  tasks:
    - name: Print time at the beginning of the test
      command: date +"%Y-%m-%d %H:%M:%S"
      register: __time1
      changed_when: false

    - name: Register dnf.conf
      stat:
        path: /etc/dnf/dnf.conf
      register: __dnf_conf

    - name: Remove proxy from dnf.conf or yum.conf
      lineinfile:
        path: >-
          {{ "/etc/dnf/dnf.conf" if __dnf_conf.stat.exists else
          "/etc/yum.conf" }}
        regexp: "{{ item }}"
        state: absent
      loop:
        - ^proxy
        - ^sslverify


    - name: List installed RPMs on localhost to see if openssl is present
      package_facts:
      changed_when: no
      delegate_to: localhost

    - name: Ensure the openssl package on localhost
      package:
        name: openssl
        state: present
      delegate_to: localhost
      when: "'openssl' not in ansible_facts.packages"

    - name: >-
        Generate a self-signed certificate and public key in the test directory
        on localhost
      command: >-
        openssl req -x509 -nodes -newkey rsa:2048
        -subj "/CN={{ ansible_default_ipv4.address }}"
        -keyout mssql.key -out mssql.pem -days 365
      changed_when: true
      delegate_to: localhost

    - name: >-
        Set up MSSQL and remove the certificate and public key on localhost.
        Test relative and full path with cert and private_key vars.
      block:
        - name: Set up MSSQL
          include_role:
            name: linux-system-roles.mssql
            public: true
          vars:
            mssql_password: "p@55w0rD"
            mssql_edition: Evaluation
            mssql_tls_enable: true
            mssql_tls_cert: "{{ playbook_dir }}/mssql.pem"
            mssql_tls_private_key: mssql.key
            mssql_tcp_port: 1433

      always:
        - name: Remove the certificate and public key on localhost
          file:
            path: "{{ item }}"
            state: absent
          delegate_to: localhost
          loop:
            - mssql.pem
            - mssql.key

    - name: Flush handlers
      meta: flush_handlers

    - name: Verify connectivity and settings
      include_tasks: tasks/verify_settings.yml
      vars:
        __verify_mssql_password: "p@55w0rD"
        __verify_mssql_is_tls_encrypted: true

    - name: Disable TLS encryption
      include_role:
        name: linux-system-roles.mssql
        public: true
      vars:
        mssql_tls_enable: false

    - name: Flush handlers
      meta: flush_handlers

    - name: Verify connectivity and settings
      include_tasks: tasks/verify_settings.yml
      vars:
        __verify_mssql_password: "p@55w0rD"
        __verify_mssql_is_tls_encrypted: false

    - name: Print time at the end of the test
      command: date +"%Y-%m-%d %H:%M:%S"
      register: __time2
      changed_when: false

    - name: Print resulting time
      debug:
        msg: >-
          The test took {{ __time2.stdout | to_datetime -
          __time1.stdout | to_datetime }}
