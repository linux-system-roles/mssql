# SPDX-License-Identifier: MIT
---
# To run this test, AD server must be configured and it's properties
# provided with the following variables:
# ad_integration_realm
# ad_integration_user
# ad_integration_password
# Inventory must contain the client Linux node and the ad AD Server node like:
# all:
#   hosts:
#     client:
#       ansible_connection: local
#       ansible_host: 127.0.0.1
#     ad:
#       ansible_host: 10.192.1.1
#       ad_fqdn: ad1.domain.com
#       ansible_connection: winrm
#       ansible_password: Secret123
#       ansible_port: 5986
#       ansible_user: Administrator
#       ansible_winrm_server_cert_validation: ignore
- name: Test integration with AD server
  hosts: client
  vars:
    mssql_accept_microsoft_odbc_driver_17_for_sql_server_eula: true
    mssql_accept_microsoft_cli_utilities_for_sql_server_eula: true
    mssql_accept_microsoft_sql_server_standard_eula: true
    mssql_version: 2022
    mssql_password: "p@55w0rD"
    mssql_edition: Evaluation
    mssql_manage_firewall: true
    mssql_debug: true
    mssql_ad_configure: true
    mssql_ad_sql_user_name: sqluser
    mssql_ad_sql_password: "p@55w0rD1"
    ad_integration_realm: domain.com
    ad_integration_password: Secret123
    ad_integration_user: Administrator
    ad_integration_manage_dns: true
    ad_integration_dns_server: 1.1.1.1
    ad_integration_dns_connection_name: eth0
    ad_integration_dns_connection_type: ethernet
  tasks:
    - name: Set up MSSQL and configure AD authentication
      include_role:
        name: linux-system-roles.mssql

    - name: Get KerberosEncryptionType of user {{ mssql_ad_sql_user_name }}
      ansible.windows.win_shell: >-
        Get-ADUser -Identity {{ mssql_ad_sql_user_name }}
        -Properties *
        | Format-Table Name,KerberosEncryptionType -A
      register: __mssql_sql_username_enc_type
      changed_when: false
      delegate_to: ad

    - name: Set AES128,AES256 encryption type for {{ mssql_ad_sql_user_name }}
      ansible.windows.win_shell: >-
        Set-ADUser -Identity {{ mssql_ad_sql_user_name }}
        -KerberosEncryptionType AES128,AES256
      when: "not 'AES128, AES256' in __mssql_sql_username_enc_type.stdout"
      delegate_to: ad

    - name: Test AD integration
      block:
        - name: Install sshpass for use in the following task
          package:
            name: sshpass
            state: present

        - name: SSH into AD, kinit as Administrator, verify authentication
          vars:
            __mssql_kinit_user: >-
              {{ ad_integration_user }}@{{ ad_integration_realm
              | upper }}
          shell: >-
            set -euo pipefail;
            sshpass -p {{ mssql_ad_sql_password | quote }}
            ssh -o StrictHostKeyChecking=no
            -l {{ mssql_ad_sql_user_name }}@{{ ad_integration_realm }}
            {{ ansible_fqdn }}
            "echo {{ ad_integration_password | quote }}
            | kinit {{ __mssql_kinit_user }} &&
            /opt/mssql-tools/bin/sqlcmd -S. -Q 'SELECT SYSTEM_USER'"
          register: __mssql_ad_test
          changed_when: false
      always:
        - name: Print test results
          debug:
            var: __mssql_ad_test.stdout_lines

        - name: Print test results
          debug:
            var: __mssql_ad_test.stderr_lines
