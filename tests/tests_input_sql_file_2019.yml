# SPDX-License-Identifier: MIT
---
- name: Ensure that the role can input sql files to MSSQL
  hosts: all
  vars:
    mssql_accept_microsoft_odbc_driver_17_for_sql_server_eula: true
    mssql_accept_microsoft_cli_utilities_for_sql_server_eula: true
    mssql_accept_microsoft_sql_server_standard_eula: true
  tasks:
    - name: Print time at the beginning of the test
      command: date +"%Y-%m-%d %H:%M:%S"
      register: __time1
      changed_when: false

    - name: Register dnf.conf
      stat:
        path: /etc/dnf/dnf.conf
      register: __dnf_conf

    - name: Remove proxy from dnf.conf or yum.conf
      lineinfile:
        path: >-
          {{ "/etc/dnf/dnf.conf" if __dnf_conf.stat.exists else
          "/etc/yum.conf" }}
        regexp: "{{ item }}"
        state: absent
      loop:
        - ^proxy
        - ^sslverify


    - name: Set up MSSQL and input the sql file
      include_role:
        name: linux-system-roles.mssql
      vars:
        mssql_input_sql_file: sql_script.sql
        mssql_password: "p@55w0rD"
        mssql_edition: Evaluation

    - name: Verify the failure when the mssql_password var is not specified
      block:
        - name: Input the sql file without the mssql_password variable
          include_role:
            name: linux-system-roles.mssql
          vars:
            mssql_input_sql_file: sql_script.sql

        - name: Unreachable task
          fail:
            msg: The above task must fail

      rescue:
        - name: Assert that the role failed with mssql_password not defined
          assert:
            that: >-
              'You must define the mssql_password variable' in
              ansible_failed_result.msg

    - name: Print time at the end of the test
      command: date +"%Y-%m-%d %H:%M:%S"
      register: __time2
      changed_when: false

    - name: Print resulting time
      debug:
        msg: >-
          The test took {{ __time2.stdout | to_datetime -
          __time1.stdout | to_datetime }}
