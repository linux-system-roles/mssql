---
# all:

#  hosts:
#    192.168.200.136:
#      ansible_user: root
#      ansible_ssh_pass: "1q!"
#      mssql_ha_replica_type: primary
#      mssql_ha_secondary_role_allow_connections: READ_ONLY
#      mssql_ha_read_only_routing_list: ('node-5','node-6')
#      ha_cluster:
#        node_name: node-4
#        pcs_address: node-4
#        corosync_addresses:
#          - 192.168.200.136
#    192.168.200.137:
#      ansible_user: root
#      ansible_ssh_pass: "1q!"
#      mssql_ha_replica_type: synchronous
#      mssql_ha_secondary_role_allow_connections: READ_ONLY
#      mssql_ha_read_only_routing_list: ('node-4','node-6')
#      ha_cluster:
#        node_name: node-5
#        pcs_address: node-5
#        corosync_addresses:
#          - 192.168.200.137
#    192.168.200.138:
#      ansible_user: root
#      ansible_ssh_pass: "1q!"
#      mssql_ha_replica_type: synchronous
#      mssql_ha_secondary_role_allow_connections: READ_ONLY
#      mssql_ha_read_only_routing_list: ('node-4','node-5')
#      ha_cluster:
#        node_name: node-6
#        pcs_address: node-6
#        corosync_addresses:
#          - 192.168.200.138


- name: Test AG with read only URL list allow connection
  hosts: all
  vars:
    mssql_accept_microsoft_odbc_driver_17_for_sql_server_eula: true
    mssql_accept_microsoft_odbc_driver_for_sql_server_eula: true
    mssql_accept_microsoft_cli_utilities_for_sql_server_eula: true
    mssql_accept_microsoft_sql_server_standard_eula: true
    mssql_version: 2022
    mssql_password: "p@55w0rD"
    mssql_edition: 2Q48Q-PB48J-DRCVN-GB844-X2H4Q
    mssql_datadir: "/data/mssql/1433/database/"
    mssql_logdir: "/data/mssql/1433/database/"
    # mssql_pre_input_sql_content: "USE MASTER;CREATE DATABASE ExampleDB2;BACKUP DATABASE ExampleDB2 TO DISK='nil'with compression;"

    mssql_enable_sql_agent: true
    mssql_manage_firewall: true
    mssql_run_selinux_confined: false
    mssql_ha_configure: true
    mssql_manage_ha_cluster: true
    mssql_ha_prep_for_pacemaker: true
    mssql_ha_ag_cluster_type: external
    mssql_ha_endpoint_port: 5022
    mssql_ha_cert_name: ExampleCert
    mssql_ha_master_key_password: "p@55w0rD1"
    mssql_ha_private_key_password: "p@55w0rD2"
    mssql_ha_reset_cert: true
    mssql_ha_endpoint_name: Example_Endpoint
    mssql_ha_ag_name: ExampleAG
    mssql_ha_db_names:
     - test_1
    mssql_ha_login: pacemakerLogin
    mssql_ha_login_password: "p@55w0rD3"
    mssql_ha_virtual_ip: 192.168.200.139
    ha_cluster_cluster_name: "{{ mssql_ha_ag_name }}"
    ha_cluster_hacluster_password: "p@55w0rD4"
    ha_cluster_cluster_properties:
      - attrs:
          - name: cluster-recheck-interval
            value: 2min
          - name: start-failure-is-fatal
            value: false
          - name: stonith-enabled
            value: false
    ha_cluster_resource_primitives:
      - id: ag_cluster
        agent: ocf:mssql:ag
        instance_attrs:
          - attrs:
              - name: ag_name
                value: "{{ mssql_ha_ag_name }}"
        meta_attrs:
          - attrs:
              - name: failure-timeout
                value: 60s
      - id: virtualip
        agent: ocf:heartbeat:IPaddr2
        instance_attrs:
          - attrs:
              - name: ip
                value: "{{ mssql_ha_virtual_ip }}"
        operations:
          - action: monitor
            attrs:
              - name: interval
                value: 30s
    ha_cluster_resource_clones:
      - resource_id: ag_cluster
        promotable: true
        meta_attrs:
          - attrs:
              - name: notify
                value: true
    ha_cluster_constraints_colocation:
      - resource_leader:
          id: ag_cluster-clone
          role: Promoted
        resource_follower:
          id: virtualip
        options:
          - name: score
            value: INFINITY
    ha_cluster_constraints_order:
      - resource_first:
          id: ag_cluster-clone
          action: promote
        resource_then:
          id: virtualip
          action: start
  tasks:
#   - name: Set facts to create a test DB on primary as a pre task
#     set_fact:
#       mssql_pre_input_sql_file: create_ExampleDB.sql
#     when: mssql_ha_replica_type == 'primary'

   - name: Run on all hosts to configure HA cluster
     include_role:
       name: microsoft.sql.server
